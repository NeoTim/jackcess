Missing pieces:

- fix long text index entries (for new general sort order)
  * ???
- implement foreign key index creation & relationship creation
  * MEDIUM
- implement table creation w/ complex columns
  * MEDIUM
- implement table, column, index renaming
  * EASY
- implement table, column, index deletion
  * EASY - MEDIUM
- implement more comprehensive unicode compression write support
  * EASY? (have the code, do we trust it?)
- implement createReadOnlyTemp(InputStream) (delete temp file on close)
  * EASY
- figure out how msaccess manages page/row locks
  * MEDIUM
  
- calculated fields
  - v2010+
  - no indexes
  - no unicode compression
  - double/int/longint/single/repid/decimal/text/date/memo/currency/bool, no ole/hyperlink
  - read/write, create column
  - only uses in-table columns (need to force update on every row update?)
  - numeric data has embedded precision/scale, something else?  only last 8
    bytes is data?  implicit precision of 18 for "pure" numeric?  implicit
    precision of 15 for double-ish numeric?
  - ***add unit tests
  - ***ability to create calculated columns!

- add properties on table/column creation
  - add unit tests

- calculated fields in queries? (2003+), w/ aliases?

Refactor goals:
- tweak lookup apis (specify column vs column name)
- clean up javadocs
  - enhance public api classes
  * add @usage tags to util classes
- implement page buffering in PageChannel
  * need to implement logical flushing in update code (startUpdate/finishUpdate)
- implement "lazy" usage maps (load on first usage)?
- add typed getter methods to Row, PropertyMap
